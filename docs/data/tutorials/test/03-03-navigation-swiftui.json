{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"category":"Initiation au développement iOS","title":"Navigation entre plusieurs écrans","role":"project","categoryPathComponent":"Tutorial-Table-of-Contents"},"sections":[{"chapter":"SwiftUI avancé","kind":"hero","backgroundImage":"exemple-code-swiftui.jpg","image":"exemple-code-swiftui.jpg","content":[{"type":"paragraph","inlineContent":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie.","type":"text"}]}],"title":"Navigation entre plusieurs écrans"},{"kind":"tasks","tasks":[{"title":"La NavigationStack","stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pour illustrer ce chapitre, nous allons construire une simple application de contacts. L’application contiendra une vue de liste de contact, une vue de détail d’un contact et une vue d’ajout de contact."}]}],"media":"03-03-intro.png","caption":[],"code":null,"runtimePreview":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Dans une NavigationStack, la navigation peut se faire en fonction de la donnée que nous sommes en train de manipuler. Nous allons avoir besoin de créer notre structure de données ainsi que de la fausse données pour notre vue. Notre contact aura un nom, un numéro de téléphone et une adresse email. Il a aussi un id, qui est généré automatiquement pour ne pas avoir à le renseigner lors de l’initialisation. Notre structure de données répond au protocol Identifiable, car elle comporte un id. Elle répond aussi au protocol Hashable, nous verrons pourquoi plus tard.","type":"text"}]}],"code":"03-03-code-01.swift","runtimePreview":null,"caption":[],"media":null},{"caption":[],"media":null,"code":"03-03-code-02.swift","content":[{"inlineContent":[{"text":"Pour afficher les informations que nous avons déjà, nous allons utiliser une nouvelle vue de base proposée par SwiftUI : ","type":"text"},{"type":"codeVoice","code":"List"},{"type":"text","text":". Cette vue peut prendre des ‘n’ éléments "},{"code":"Text","type":"codeVoice"},{"type":"text","text":" pour les afficher sous la forme d’une liste classique iOS, qui gère le scroll et la séparation des cellules. Dans notre cas, nous voulons que chaque contact présent dans le tableau soit affiché, nous utilisons donc une boucle "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" qui nous renverras un élément "},{"code":"Text","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":"03-03-code-02.png","type":"step"},{"type":"step","content":[{"inlineContent":[{"text":"Nous allons pouvoir ajouter notre liste dans une ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":". "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" seul ne va pas changer l’aspect visuel de notre écran, en revanche maintenant que nous l’avons nous pouvons ajouter un modificateur "},{"code":".navigationTitle","type":"codeVoice"},{"text":" pour nommer notre liste. Cette affichage correspond à l’affichage standard de titre sur iOS, avec gestion du scroll.","type":"text"}],"type":"paragraph"}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"⚠️ Bien faire attention de ne pas mettre le modificateur ","type":"text"},{"code":".navigationTitle","type":"codeVoice"},{"type":"text","text":" sur la "},{"type":"codeVoice","code":"NavigationStack"},{"text":" car cela n’aura aucun effet. Ce modificateur doit être mis à la racine de la vue enfant de ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"}],"media":null,"code":"03-03-code-03.swift","runtimePreview":"03-03-code-03.mp4"},{"type":"step","runtimePreview":"03-03-code-04.png","caption":[],"media":null,"code":"03-03-code-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous avons donc notre "},{"code":"NavigationStack","type":"codeVoice"},{"text":" en place, mais pour le moment aucune navigation n’a lieu. Il faut pour cela placer notre élément ","type":"text"},{"type":"codeVoice","code":"Text"},{"text":" dans une vue ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"text":", qui prend en paramètre de la donnée conforme au protocole Hashable. Notre structure Contact répondant à Hashable, nous pouvons passer directement notre donnée. A l’ajout du ","type":"text"},{"type":"codeVoice","code":"NavigationLink"},{"text":", une petite flèche apparait en bout de ligne après le nom pour indiquer à l’utilisateur que cliquer ici l’emmenera ailleurs.","type":"text"}]}]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Nous allons ajouter un nouveau modificateur à notre code : ","type":"text"},{"type":"codeVoice","code":".navigationDestination"},{"type":"text","text":". Ce modificateur va prendre en paramètre un type de donnée Hashable, dans notre cas ce sera notre structure Contact. Nous rajoutons "},{"code":".self","type":"codeVoice"},{"text":" car nous voulons bien utiliser le type en lui même et non une instance du type. Dans la closure, nous pouvons ajouter du code SwiftUI qui va correspondre à la vue affichée après notre navigation. Nous pouvons aussi appeler une vue SwiftUI plus complexe qui prendrait comme paramètre un élément Contact. Le bouton de retour en haut est ajouté automatiquement.","type":"text"}]}],"code":"03-03-code-05.swift","runtimePreview":"03-03-code-05.mp4","caption":[{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Si nous avions n types de données dans notre vue, et souhaitons naviguer en fonction du type de donnée, il suffirait d’ajouter n ","type":"text"},{"type":"codeVoice","code":".navigationDestination"},{"text":" avec un type chacun.","type":"text"}]}]}],"media":null},{"type":"step","runtimePreview":"03-03-code-05-bis.mp4","caption":[],"code":"03-03-code-05-bis.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Parfois, on souhaite atteindre une vue sans avoir à traiter de donnée spécifique. On utilise pour cela un ","type":"text"},{"type":"codeVoice","code":".navigationDestination(isPresented: Bool)"},{"type":"text","text":" avec un booléen "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" pour déclencher ou nom la navigation."}]}]}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Introduite avec iOS 16, la NavigationStack simplifie grandement la navigation entre vue SwiftUI."}]}]}],"anchor":"La-NavigationStack"},{"stepsSection":[{"code":"03-03-code-06.swift","runtimePreview":"03-03-code-06.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous allons ajouter un bouton en haut de notre écran afin de pouvoir ajouter un nouveau contact. Afin que le nouveau bouton s’intègre de façon homogène à notre écran, nous allons utiliser un modificateur spécifique à la NavigationStack : "},{"type":"codeVoice","code":".toolbar"},{"type":"text","text":". Cette toolbar nous permet d’ajouter des éléments dans le haut de l’écran comme des boutons, qui nous seraient autrement innacessible dans le cas d’une NavigationStack. La toolbar accueille des "},{"code":"ToolbarItem","type":"codeVoice"},{"type":"text","text":", auquels on défini un emplacement. Ici nous ajoutons donc un bouton, dont l’action sera de déclencher le nouveau booléen "},{"type":"codeVoice","code":"showAddView"},{"type":"text","text":"."}]}],"type":"step","media":null},{"caption":[],"runtimePreview":"03-03-code-07.mp4","content":[{"inlineContent":[{"type":"text","text":"Afin d’afficher la bottom sheet en grand sur l’écran, il faut utiliser un nouveau modificateur SwiftUI : "},{"type":"codeVoice","code":".sheet"},{"text":". Il prend comme paramètre le booléen qui indique si il est affiché ou non. On peut mettre dedans directement notre code SwiftUI ou bien appeler une autre vue SwiftUI.","type":"text"}],"type":"paragraph"}],"media":null,"code":"03-03-code-07.swift","type":"step"},{"code":"03-03-code-08.swift","runtimePreview":"03-03-code-08.png","caption":[{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pour un soucis de lisibilité, l’écran d’ajout sera créé dans un fichier différent de l’écran de base. Pas besoin de padding avec le "},{"type":"codeVoice","code":"Form"},{"text":", SwiftUI se charge de l’afficher convenablement pour nous !","type":"text"}]}],"style":"note","type":"aside"}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous allons créer un simple formulaire d’ajout de contact. Pour cela, SwiftUI vient avec un élément déjà concçu pour nous: le "},{"code":"Form","type":"codeVoice"},{"text":" qui prendra en son sein tous les éléments SwiftUI qui formeront notre formulaire. Cela va nous permettre aussi de découvrir un autre nouvel élément SwiftUI : ","type":"text"},{"type":"codeVoice","code":"TextField"},{"text":". Il s’agit d’un champ qui permet à l’utilisateur de taper du texte. Le ","type":"text"},{"code":"TextField","type":"codeVoice"},{"type":"text","text":" doit être lié à une variable dans la structure, et nous souhaitons pouvoir modifier la valeur de cette variable : il faut donc lui rajouter l’argument "},{"code":"@State","type":"codeVoice"},{"type":"text","text":". Nous ajoutons aussi les boutons d’annulation et de validation en haut de la page."}]}],"media":null},{"content":[{"inlineContent":[{"text":"Pour le ","type":"text"},{"type":"codeVoice","code":"TextField"},{"type":"text","text":", il est possible de donner un type de clavier particulier pour limiter les risques de récupération de donnée non conforme. On utilise pour cela le modificateur "},{"code":".keyboardType","type":"codeVoice"},{"type":"text","text":", auquel on peut passer un argument comme "},{"type":"codeVoice","code":".emailAddress"},{"text":" ou ","type":"text"},{"code":".numberPad","type":"codeVoice"},{"type":"text","text":" pour le téléphone."}],"type":"paragraph"}],"runtimePreview":null,"caption":[],"type":"step","media":null,"code":"03-03-code-09.swift"},{"content":[{"inlineContent":[{"type":"text","text":"Maintenant que nous avons notre nouvel écran, nous voulons pouvoir l’appeler depuis notre écran principal."}],"type":"paragraph"}],"runtimePreview":"03-03-code-10.mp4","caption":[],"media":null,"code":"03-03-code-10.swift","type":"step"},{"code":"03-03-code-11.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"L’affichage du nouvel écran se passe bien, mais nous remarquons que les boutons Annuler et Enregistrer ne font rien. Pour un bon fonctionnement, les deux devraient faire se fermer le volet une fois touchés. La variable d’environnement "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" permet à notre vue de prendre le contrôle de son affichage. Le fait d’appeler dismiss à la manière d’une fonction fera se refermer notre page."}],"type":"paragraph"}],"caption":[],"media":null},{"caption":[],"media":null,"runtimePreview":null,"code":"03-03-code-13.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Il faut maintenant enregistrer le nouveau contact, créé dans la vue d’ajout, dans le tableau de la vue principale. Ici plusieurs solutions peuvent s’offrir à nous, le passage de fonction en paramètre a été retenu. L’idée est de pouvoir appeler depuis la vue fille une fonction définie dans la vue mère. Nous commençons par ajouter dans la vue "},{"type":"codeVoice","code":"AddView"},{"text":" une variable qui va recevoir une fonction. Cette fonction aura trois paramètres, correspondants aux éléments que notre vue traite. Enfin, cette fonction ne retournera rien, d’où le ","type":"text"},{"code":"-> ()","type":"codeVoice"},{"type":"text","text":". Nous allons ensuite appeler cette méthode lors de l’appuie sur le bouton Enregistrer."}],"type":"paragraph"}]},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Maintenant que la variable a été déclarée dans la vue d’ajout, il faut passer une méthode lors de son appel depuis la vue principale. Nous faisons ce que nous appelons une closure, qui a trois paramètres comme la variable déclarée précédemment. Dans cette closure, nous avons accès à notre tableau auquel nous pouvons ajouter un élément via un "},{"code":"append","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"caption":[],"code":"03-03-code-14.swift","type":"step"},{"code":null,"media":"03-03-code-15.mp4","content":[{"inlineContent":[{"text":"Tout est en place ! Le tableau de la vue principale étant ","type":"text"},{"type":"codeVoice","code":"@State"},{"text":", le fait d’ajouter un élément à l’intérieur raffraichit automatiquement la vue et prend en compte notre nouveau contact.","type":"text"}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null}],"title":"Afficher une bottom sheet","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"La navigation iOS ne se contente pas seulement de naviguer en poussant les vues sur le plan horizontal, elle peut aussi le faire sur le plan vertical sous la forme de Bottom Sheet.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}],"anchor":"Afficher-une-bottom-sheet"}]},{"abstract":[{"text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI.","type":"text"}],"featuredEyebrow":"Tutorial","title":"Introduction à SwiftData","kind":"callToAction","action":{"isActive":true,"overridingTitle":"Get started","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]}}],"variants":[{"paths":["\/tutorials\/test\/03-03-navigation-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui"},"kind":"project","hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"task"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","projects":[{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"}]}]}],"paths":[["doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"]],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents"},"references":{"03-03-code-03.swift":{"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    Text(contact.name)","                }","            }","            .navigationTitle(\"Contacts\")","        }","    }","}"],"highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":14}],"identifier":"03-03-code-03.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"03-03-code-07.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-07.swift","highlights":[{"line":28},{"line":29},{"line":30}],"content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                Text(\"hello world\")","            }","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","        }","    }","}"]},"exemple-code-swiftui.jpg":{"alt":"","variants":[{"traits":["1x","light"],"url":"\/images\/com.williamtomas.test\/exemple-code-swiftui.jpg"}],"identifier":"exemple-code-swiftui.jpg","type":"image"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-simulateur":{"title":"Le simulateur","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","abstract":[{"text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store.","type":"text"}],"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","role":"pseudoSymbol","kind":"section"},"03-03-code-07.mp4":{"alt":null,"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-07.mp4","traits":["1x","light"]}],"identifier":"03-03-code-07.mp4","poster":null,"type":"video"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/SwiftUI-avanc-":{"kind":"article","title":"SwiftUI avancé","role":"article","url":"\/tutorials\/tutorial-table-of-contents\/swiftui-avanc-","abstract":[],"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"},"03-03-code-14.swift":{"type":"file","content":["struct ContentView: View {","    @State var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                AddView(addMethod: {nom, phone, mail in","                    contacts.append(.init(name: nom, phoneNumber: phone, mail: mail))","                })","            }","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","        }","    }","}"],"highlights":[],"identifier":"03-03-code-14.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"03-03-code-13.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-13.swift","highlights":[],"content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    @Environment(\\.dismiss) var dismiss","","    var addMethod: (_ nom: String, _ phone: String, _ mail: String) -> ()","","    var body: some View {","        NavigationView {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {","                        dismiss()","                    }","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {","                        dismiss()","                        addMethod(nom, phone, mail)","                    }","                }","            }","        }","    }","}"]},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession#Prise-en-main":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","type":"section","title":"Prise en main"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-trackpad":{"type":"section","title":"Le trackpad","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","role":"pseudoSymbol","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad"},"03-03-code-01.swift":{"type":"file","content":["struct Contact: Identifiable, Hashable {","    let id: UUID = UUID()","    let name: String","    let phoneNumber: String","    let mail: String","}","","struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","    ","    var body: some View {","        Text(\"Hello World !\")","    }","}"],"highlights":[],"identifier":"03-03-code-01.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"03-03-code-03.mp4":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/com.williamtomas.test\/03-03-code-03.mp4"}],"identifier":"03-03-code-03.mp4","poster":null,"type":"video"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats":{"title":"Gérer des états dans une vue","url":"\/tutorials\/test\/03-02-swiftui-etats","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","type":"topic","role":"project"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-texte":{"title":"Partie texte","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","type":"section","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui":{"kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","role":"project","url":"\/tutorials\/test\/02-01-intro-swiftui","type":"topic","title":"SwiftUI c'est quoi ?","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}]},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State":{"url":"\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","title":"Les états avec le property wrapper @State","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"type":"section","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-de-droite":{"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","title":"Le volet de droite","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","abstract":[{"text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store.","type":"text"}],"type":"section","kind":"section"},"03-03-code-05.swift":{"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","        }","    }","}"],"highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"identifier":"03-03-code-05.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI":{"type":"topic","title":"Optimisation du code SwiftUI","url":"\/tutorials\/test\/03-01-optimisation-swiftui","role":"project","abstract":[{"type":"text","text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning."}],"kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-Swift-et-de-Xcode":{"title":"Découverte de Swift et de Xcode","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swift-et-de-xcode","abstract":[],"kind":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","type":"topic","role":"article"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-actions":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","type":"section","title":"Partie actions"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata#Prise-en-main":{"kind":"section","url":"\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","type":"section","abstract":[{"text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI.","type":"text"}],"title":"Prise en main","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#La-NavigationStack":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","type":"section","title":"La NavigationStack"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-bas":{"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","title":"Le volet du bas","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"type":"section","kind":"section"},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code#Les-basiques":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/02-02-swiftui-code#Les-basiques","abstract":[{"text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","type":"section","title":"Les basiques"},"03-03-intro.png":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-intro.png","traits":["1x","light"]}],"identifier":"03-03-intro.png","type":"image"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple":{"title":"Exemple d'utilisation : reproduction d'un post Instagram","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple","role":"project","kind":"project"},"03-03-code-08.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.williamtomas.test\/03-03-code-08.png"}],"identifier":"03-03-code-08.png","type":"image"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Le-property-wrapper-Binding":{"url":"\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","title":"Le property wrapper @Binding","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"type":"section","kind":"section"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues":{"kind":"section","title":"Découper notre vue en plusieurs minis vues","role":"pseudoSymbol","url":"\/tutorials\/test\/03-01-optimisation-swiftui#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","abstract":[{"text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning.","type":"text"}],"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues"},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift":{"kind":"project","role":"project","url":"\/tutorials\/test\/01-02-decouverte-swift","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"text":" ","type":"text"},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"text":" ","type":"text"},{"text":"propriétaire qui elles ne sont pas open-source.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","type":"topic","title":"Le langage Swift"},"03-03-code-02.png":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-02.png","traits":["1x","light"]}],"identifier":"03-03-code-02.png","type":"image"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet":{"kind":"project","title":"Créer son premier projet","role":"project","url":"\/tutorials\/test\/01-04-creer-un-projet","abstract":[{"text":"Découvrons comment se passe la création d’un projet sur Xcode.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-gauche":{"title":"Le volet gauche","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","type":"section","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet":{"title":"Créer son premier projet","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"url":"\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode":{"type":"topic","url":"\/tutorials\/test\/01-03-decouverte-xcode","title":"Présentation d'Xcode","kind":"project","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation":{"type":"section","title":"Le système d'exploitation","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","role":"pseudoSymbol","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-clavier":{"url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","title":"Le clavier","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"type":"section","kind":"section"},"03-03-code-10.swift":{"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                AddView()","            }","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","        }","    }","}"],"highlights":[],"identifier":"03-03-code-10.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"03-03-code-09.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-09.swift","highlights":[{"line":11},{"line":13}],"content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    var body: some View {","        NavigationView {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {}","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {}","                }","            }","        }","    }","}"]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple":{"url":"\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","title":"Pourquoi développer sur les plateformes Apple ?","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"type":"section","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store":{"kind":"section","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","url":"\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","role":"pseudoSymbol","title":"Avoir son application sur l'App Store","type":"section"},"03-03-code-04.png":{"alt":"","variants":[{"traits":["1x","light"],"url":"\/images\/com.williamtomas.test\/03-03-code-04.png"}],"identifier":"03-03-code-04.png","type":"image"},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code":{"url":"\/tutorials\/test\/02-02-swiftui-code","title":"Prise en main de SwiftUI","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"type":"topic","kind":"project"},"03-03-code-11.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-11.swift","highlights":[],"content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    @Environment(\\.dismiss) var dismiss","","    var body: some View {","        NavigationView {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {","                        dismiss()","                    }","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {","                        dismiss()","                    }","                }","            }","        }","    }","}"]},"03-03-code-06.png":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-06.png","traits":["1x","light"]}],"identifier":"03-03-code-06.png","type":"image"},"03-03-code-02.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-02.swift","highlights":[],"content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        List {","            ForEach(contacts) { contact in","                Text(contact.name)","            }","        }","    }","}"]},"03-03-code-05.mp4":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/com.williamtomas.test\/03-03-code-05.mp4"}],"identifier":"03-03-code-05.mp4","poster":null,"type":"video"},"03-03-code-05-bis.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-05-bis.swift","highlights":[{"line":7},{"line":8},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":34},{"line":35},{"line":36}],"content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var moveToNextView = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        moveToNextView.toggle()","                    } label: {","                        Text(\"Next view\")","                    }","                }","            }","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","            .navigationDestination(isPresented: $moveToNextView) {","                Text(\"Hello World !\")","            }","        }","    }","}"]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents":{"url":"\/tutorials\/tutorial-table-of-contents","title":"Sup de Vinci - 2025","role":"overview","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","abstract":[{"text":"Avec ce cours, vous allez découvrir les bases du développement d’application sur iOS","type":"text"},{"type":"text","text":" "},{"type":"text","text":"avec des exemples et de la prise en main."},{"type":"text","text":" "},{"text":"L’objectif à la fin de cette semaine est que vous soyez en mesure de développer seul","type":"text"},{"type":"text","text":" "},{"text":"une application iOS simple mais complète.","type":"text"}],"type":"topic","kind":"overview"},"03-03-code-06.swift":{"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .navigationDestination(for: Contact.self) { contact in","                VStack {","                    Text(contact.name)","                    Text(contact.mail)","                }","            }","        }","    }","}"],"highlights":[],"identifier":"03-03-code-06.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift#Les-bases-du-langage":{"kind":"section","title":"Les bases du langage","role":"pseudoSymbol","url":"\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"text":" ","type":"text"},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"text":"propriétaire qui elles ne sont pas open-source.","type":"text"}],"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui":{"type":"topic","title":"Navigation entre plusieurs écrans","url":"\/tutorials\/test\/03-03-navigation-swiftui","role":"project","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-SwiftUI":{"kind":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","title":"Découverte de SwiftUI","role":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swiftui","abstract":[]},"03-03-code-08.swift":{"fileType":"swift","type":"file","fileName":"exemple.swift","syntax":"swift","identifier":"03-03-code-08.swift","highlights":[],"content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    var body: some View {","        NavigationView {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                TextField(\"E-Mail\", text: $mail)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {}","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {}","                }","            }","        }","    }","}"]},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac":{"title":"Débuter avec Mac","url":"\/tutorials\/test\/01-05-debuter-avec-mac","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}],"kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","type":"topic","role":"project"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-haut":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","type":"section","title":"Le volet du haut"},"03-03-code-04.swift":{"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink(value: contact) {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","        }","    }","}"],"highlights":[{"line":11},{"line":12},{"line":13}],"identifier":"03-03-code-04.swift","syntax":"swift","fileType":"swift","fileName":"exemple.swift"},"03-03-code-15.mp4":{"alt":"","variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-15.mp4","traits":["1x","light"]}],"identifier":"03-03-code-15.mp4","poster":null,"type":"video"},"03-03-code-10.mp4":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/com.williamtomas.test\/03-03-code-10.mp4"}],"identifier":"03-03-code-10.mp4","poster":null,"type":"video"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Organisons-des-fichiers-de-base":{"type":"section","title":"Organisons des fichiers de base","url":"\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","role":"pseudoSymbol","abstract":[{"text":"Découvrons comment se passe la création d’un projet sur Xcode.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/Traitement-de-la-donn-e-en-Swift":{"type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/traitement-de-la-donn-e-en-swift","title":"Traitement de la donnée en Swift","kind":"article","role":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","abstract":[]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-du-haut":{"title":"Partie du haut","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","type":"section","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Mise-en-place":{"title":"Mise en place","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","role":"pseudoSymbol","kind":"section"},"03-03-code-05-bis.mp4":{"alt":null,"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-05-bis.mp4","traits":["1x","light"]}],"identifier":"03-03-code-05-bis.mp4","poster":null,"type":"video"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession":{"url":"\/tutorials\/test\/04-02-intro-urlsession","title":"Récupérer des données depuis un serveur","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"type":"topic","kind":"project"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata":{"kind":"project","role":"project","url":"\/tutorials\/test\/04-01-intro-swiftdata","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","type":"topic","title":"Introduction à SwiftData"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#Afficher-une-bottom-sheet":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","type":"section","title":"Afficher une bottom sheet"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-image":{"type":"section","title":"Partie image","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","role":"pseudoSymbol","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement":{"kind":"project","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","url":"\/tutorials\/test\/01-01-decouverte-environnement","role":"project","title":"Découverte de l'environnement","type":"topic"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui#Pr%C3%A9sentation":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","abstract":[{"text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","type":"section","title":"Présentation"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS":{"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","type":"section","title":"Un bref historique du développement iOS"}}}