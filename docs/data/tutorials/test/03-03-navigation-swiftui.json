{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/test\/03-03-navigation-swiftui"]}],"kind":"project","metadata":{"category":"Initiation au développement iOS","role":"project","categoryPathComponent":"Tutorial-Table-of-Contents","title":"Navigation entre plusieurs écrans"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","interfaceLanguage":"swift"},"sections":[{"backgroundImage":"exemple-code-swiftui.jpg","content":[{"inlineContent":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie."}],"type":"paragraph"}],"chapter":"SwiftUI avancé","kind":"hero","title":"Navigation entre plusieurs écrans","image":"exemple-code-swiftui.jpg"},{"tasks":[{"title":"La NavigationStack","anchor":"La-NavigationStack","stepsSection":[{"media":"03-03-intro.png","runtimePreview":null,"type":"step","code":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Pour illustrer ce chapitre, nous allons construire une simple application de contacts. L’application contiendra une vue de liste de contact, une vue de détail d’un contact et une vue d’ajout de contact."}],"type":"paragraph"}]},{"caption":[],"code":"03-03-code-01.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Pour cet exemple, nous allons avoir besoin de manipuler de la donnée. Nous allons pour cela créer un modèle ","type":"text"},{"code":"Contact","type":"codeVoice"},{"type":"text","text":", ainsi que de la fausse données pour notre vue. Notre contact aura un nom, un numéro de téléphone et une adresse email. Il a aussi un id, qui est généré automatiquement pour ne pas avoir à le renseigner lors de l’initialisation. Notre structure de données répond au protocol Identifiable, car elle comporte un id."}]}],"media":null,"runtimePreview":null,"type":"step"},{"type":"step","media":null,"runtimePreview":"03-03-code-02.png","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Pour afficher les informations que nous avons déjà, nous allons utiliser une nouvelle vue de base proposée par SwiftUI : "},{"type":"codeVoice","code":"List"},{"type":"text","text":". Cette vue peut prendre des ‘n’ éléments "},{"type":"codeVoice","code":"Text"},{"text":" pour les afficher sous la forme d’une liste classique iOS, qui gère le scroll et la séparation des cellules. Dans notre cas, nous voulons que chaque contact présent dans le tableau soit affiché, nous utilisons donc une boucle ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" qui nous renverras un élément ","type":"text"},{"code":"Text","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"03-03-code-02.swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous allons pouvoir ajouter notre liste dans une "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":". "},{"type":"codeVoice","code":"NavigationStack"},{"text":" seul ne va pas changer l’aspect visuel de notre écran, en revanche maintenant que nous l’avons nous pouvons ajouter un modificateur ","type":"text"},{"type":"codeVoice","code":".navigationTitle"},{"text":" pour nommer notre liste. Cette affichage correspond à l’affichage standard de titre sur iOS, avec gestion du scroll.","type":"text"}]}],"type":"step","caption":[{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"⚠️ Bien faire attention de ne pas mettre le modificateur "},{"code":".navigationTitle","type":"codeVoice"},{"type":"text","text":" sur la "},{"type":"codeVoice","code":"NavigationStack"},{"text":" car cela n’aura aucun effet. Ce modificateur doit être mis à la racine de la vue enfant de ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"runtimePreview":"03-03-code-03.mp4","media":null,"code":"03-03-code-03.swift"},{"runtimePreview":"03-03-code-04.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous avons donc notre "},{"code":"NavigationStack","type":"codeVoice"},{"text":" en place, mais pour le moment aucune navigation n’a lieu. Il faut pour cela placer notre élément ","type":"text"},{"type":"codeVoice","code":"Text"},{"text":" dans une vue ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"text":", qui prend deux éléments en paramètres: la vue de destination et notre élément ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". A l’ajout du "},{"code":"NavigationLink","type":"codeVoice"},{"type":"text","text":", une petite flèche apparait en bout de ligne après le nom pour indiquer à l’utilisateur que cliquer ici l’emmenera ailleurs."}]}],"type":"step","media":null,"code":"03-03-code-04.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Dans notre exemple précédent nous mettions directement un VStack avec deux Text comme destination, nous pouvons aussi appeler une autre vue et même passer un objet en paramètre comme suit.","type":"text"}]}],"media":null,"code":"03-03-code-05.swift","runtimePreview":"03-03-code-05.mp4","caption":[],"type":"step"},{"content":[{"inlineContent":[{"type":"text","text":"⚠️ Attention à ne bien mettre qu’un seul "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" dans votre application. En avoir plusieur pourrait provoquer l’apparition d’une double bar de navigation en haut de votre écran, voir causer des bugs de navigation. Les vues de destinations atteintes à partir d’une vue principale contenant un "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" bénéficie automatiquement de la navigation avec d’autres "},{"code":"NavigationLink","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"caption":[],"code":"03-03-code-05.swift","runtimePreview":null,"type":"step"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Introduite avec iOS 16, la NavigationStack simplifie grandement la navigation entre vue SwiftUI.","type":"text"}]}]}]},{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"La navigation iOS ne se contente pas seulement de naviguer en poussant les vues sur le plan horizontal, elle peut aussi le faire sur le plan vertical sous la forme de Bottom Sheet."}],"type":"paragraph"}]}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nous allons ajouter un bouton en haut de notre écran afin de pouvoir ajouter un nouveau contact. Afin que le nouveau bouton s’intègre de façon homogène à notre écran, nous allons utiliser un modificateur spécifique à la NavigationStack : "},{"code":".toolbar","type":"codeVoice"},{"text":". Cette toolbar nous permet d’ajouter des éléments dans le haut de l’écran comme des boutons, qui nous seraient autrement innacessible dans le cas d’une NavigationStack. La toolbar accueille des ","type":"text"},{"code":"ToolbarItem","type":"codeVoice"},{"text":", auquels on défini un emplacement. Ici nous ajoutons donc un bouton, dont l’action sera de déclencher le nouveau booléen ","type":"text"},{"code":"showAddView","type":"codeVoice"},{"text":".","type":"text"}]}],"code":"03-03-code-06.swift","runtimePreview":"03-03-code-06.png","caption":[],"media":null,"type":"step"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Afin d’afficher la bottom sheet en grand sur l’écran, il faut utiliser un nouveau modificateur SwiftUI : "},{"type":"codeVoice","code":".sheet"},{"text":". Il prend comme paramètre le booléen qui indique si il est affiché ou non. On peut mettre dedans directement notre code SwiftUI ou bien appeler une autre vue SwiftUI.","type":"text"}]}],"media":null,"code":"03-03-code-07.swift","runtimePreview":"03-03-code-07.mp4","caption":[]},{"type":"step","code":"03-03-code-08.swift","media":null,"runtimePreview":"03-03-code-08.png","caption":[{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"Pour un soucis de lisibilité, l’écran d’ajout sera créé dans un fichier différent de l’écran de base. Pas besoin de padding avec le ","type":"text"},{"type":"codeVoice","code":"Form"},{"type":"text","text":", SwiftUI se charge de l’afficher convenablement pour nous !"}],"type":"paragraph"}],"type":"aside"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Nous allons créer un simple formulaire d’ajout de contact. Pour cela, SwiftUI vient avec un élément déjà concçu pour nous: le ","type":"text"},{"type":"codeVoice","code":"Form"},{"type":"text","text":" qui prendra en son sein tous les éléments SwiftUI qui formeront notre formulaire. Cela va nous permettre aussi de découvrir un autre nouvel élément SwiftUI : "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":". Il s’agit d’un champ qui permet à l’utilisateur de taper du texte. Le "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":" doit être lié à une variable dans la structure, et nous souhaitons pouvoir modifier la valeur de cette variable : il faut donc lui rajouter l’argument "},{"code":"@State","type":"codeVoice"},{"type":"text","text":". Nous ajoutons aussi les boutons d’annulation et de validation en haut de la page."}]}]},{"runtimePreview":"03-03-code-08.png","content":[{"inlineContent":[{"text":"Les lecteurs les plus avertis auront remarqué que mon formulaire vient dans son propre NavigationStack, alors que je mentionne plus haut qu’il n’en faut qu’un seul par application… Cela est dû au fait qu’en SwiftUI, les vues présentées sous la forme de modales sont littéralement par dessus la vue principale, et ne peuvent pas accéder au NavigationStack de base. Or un NavigationStack est nécessaire pour avoir accès à la Toolbar notamment. Donc pour les vues présentées sous forme de modale, un nouveau NavigationStack est autorisé si on a besoin d’accéder à la Toolbar, ou bien de faire une navigation dans la modale.","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"type":"step","code":"03-03-code-08.swift"},{"media":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pour le "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":", il est possible de donner un type de clavier particulier pour limiter les risques de récupération de donnée non conforme. On utilise pour cela le modificateur "},{"code":".keyboardType","type":"codeVoice"},{"type":"text","text":", auquel on peut passer un argument comme "},{"type":"codeVoice","code":".emailAddress"},{"text":" ou ","type":"text"},{"type":"codeVoice","code":".numberPad"},{"text":" pour le téléphone.","type":"text"}]}],"code":"03-03-code-09.swift","runtimePreview":null},{"runtimePreview":"03-03-code-10.mp4","code":"03-03-code-10.swift","caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Maintenant que nous avons notre nouvel écran, nous voulons pouvoir l’appeler depuis notre écran principal.","type":"text"}]}],"media":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"L’affichage du nouvel écran se passe bien, mais nous remarquons que les boutons Annuler et Enregistrer ne font rien. Pour un bon fonctionnement, les deux devraient faire se fermer le volet une fois touchés. La variable d’environnement ","type":"text"},{"type":"codeVoice","code":"dismiss"},{"text":" permet à notre vue de prendre le contrôle de son affichage. Le fait d’appeler dismiss à la manière d’une fonction fera se refermer notre page.","type":"text"}]}],"media":null,"code":"03-03-code-11.swift","runtimePreview":null},{"media":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Il faut maintenant enregistrer le nouveau contact, créé dans la vue d’ajout, dans le tableau de la vue principale. Ici plusieurs solutions peuvent s’offrir à nous, le passage de fonction en paramètre a été retenu. L’idée est de pouvoir appeler depuis la vue fille une fonction définie dans la vue mère. Nous commençons par ajouter dans la vue "},{"type":"codeVoice","code":"AddView"},{"text":" une variable qui va recevoir une fonction. Cette fonction aura trois paramètres, correspondants aux éléments que notre vue traite. Enfin, cette fonction ne retournera rien, d’où le ","type":"text"},{"type":"codeVoice","code":"-> ()"},{"type":"text","text":". Nous allons ensuite appeler cette méthode lors de l’appuie sur le bouton Enregistrer."}]}],"code":"03-03-code-13.swift","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maintenant que la variable a été déclarée dans la vue d’ajout, il faut passer une méthode lors de son appel depuis la vue principale. Nous faisons ce que nous appelons une closure, qui a trois paramètres comme la variable déclarée précédemment. Dans cette closure, nous avons accès à notre tableau auquel nous pouvons ajouter un élément via un "},{"code":"append","type":"codeVoice"},{"text":".","type":"text"}]}],"caption":[],"type":"step","code":"03-03-code-14.swift","runtimePreview":null,"media":null},{"code":null,"content":[{"inlineContent":[{"text":"Tout est en place ! Le tableau de la vue principale étant ","type":"text"},{"code":"@State","type":"codeVoice"},{"type":"text","text":", le fait d’ajouter un élément à l’intérieur raffraichit automatiquement la vue et prend en compte notre nouveau contact."}],"type":"paragraph"}],"caption":[],"type":"step","media":"03-03-code-15.mp4","runtimePreview":null}],"title":"Afficher une bottom sheet","anchor":"Afficher-une-bottom-sheet"}],"kind":"tasks"},{"action":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","isActive":true,"overridingTitle":"Get started","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Introduction à SwiftData"}],"hierarchy":{"paths":[["doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"]],"modules":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"task"}]}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"}]}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","kind":"task"}]}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"}]}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents"},"references":{"03-03-code-04.swift":{"fileName":"exemple.swift","identifier":"03-03-code-04.swift","fileType":"swift","syntax":"swift","type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        VStack {","                            Text(contact.name)","                            Text(contact.mail)","                        }","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","        }","    }","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-bas":{"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"title":"Le volet du bas","type":"section"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store":{"url":"\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","role":"pseudoSymbol","kind":"section","title":"Avoir son application sur l'App Store","type":"section","abstract":[{"text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-de-droite":{"role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","title":"Le volet de droite","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","kind":"section","type":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-actions":{"role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","title":"Partie actions","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","kind":"section","type":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple":{"title":"Exemple d'utilisation : reproduction d'un post Instagram","kind":"project","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","type":"topic","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"03-03-code-11.swift":{"syntax":"swift","content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    @Environment(\\.dismiss) var dismiss","","    var body: some View {","        NavigationStack {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {","                        dismiss()","                    }","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {","                        dismiss()","                    }","                }","            }","        }","    }","}"],"fileName":"exemple.swift","type":"file","identifier":"03-03-code-11.swift","fileType":"swift","highlights":[]},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation":{"title":"Le système d'exploitation","role":"pseudoSymbol","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}],"url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","type":"section","kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession#Prise-en-main":{"title":"Prise en main","role":"pseudoSymbol","abstract":[{"text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique.","type":"text"}],"url":"\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","type":"section","kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"},"03-03-code-10.swift":{"syntax":"swift","fileName":"exemple.swift","highlights":[],"type":"file","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        DetailView(contact: contact)","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                AddView()","            }","        }","    }","}"],"fileType":"swift","identifier":"03-03-code-10.swift"},"03-03-code-04.png":{"alt":"","type":"image","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-04.png","traits":["1x","light"]}],"identifier":"03-03-code-04.png"},"03-03-intro.png":{"alt":"","type":"image","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-intro.png","traits":["1x","light"]}],"identifier":"03-03-intro.png"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui":{"title":"SwiftUI c'est quoi ?","role":"project","abstract":[{"text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile.","type":"text"}],"url":"\/tutorials\/test\/02-01-intro-swiftui","type":"topic","kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues":{"url":"\/tutorials\/test\/03-01-optimisation-swiftui#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","kind":"section","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","role":"pseudoSymbol","title":"Découper notre vue en plusieurs minis vues","abstract":[{"type":"text","text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning."}]},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui":{"kind":"project","title":"Navigation entre plusieurs écrans","url":"\/tutorials\/test\/03-03-navigation-swiftui","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","role":"project","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie.","type":"text"}]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-Swift-et-de-Xcode":{"url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swift-et-de-xcode","kind":"article","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","role":"article","title":"Découverte de Swift et de Xcode","abstract":[]},"03-03-code-14.swift":{"content":["struct ContentView: View {","    @State var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        DetailView(contact: contact)","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                AddView(addMethod: {nom, phone, mail in","                    contacts.append(.init(name: nom, phoneNumber: phone, mail: mail))","                })","            }","        }","    }","}"],"highlights":[],"syntax":"swift","identifier":"03-03-code-14.swift","type":"file","fileType":"swift","fileName":"exemple.swift"},"03-03-code-01.swift":{"syntax":"swift","content":["struct Contact: Identifiable {","    let id: UUID = UUID()","    let name: String","    let phoneNumber: String","    let mail: String","}","","struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","    ","    var body: some View {","        Text(\"Hello World !\")","    }","}"],"identifier":"03-03-code-01.swift","fileName":"exemple.swift","type":"file","fileType":"swift","highlights":[]},"03-03-code-03.mp4":{"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-03.mp4","traits":["1x","light"]}],"identifier":"03-03-code-03.mp4","poster":null,"alt":null,"type":"video"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats":{"title":"Gérer des états dans une vue","kind":"project","url":"\/tutorials\/test\/03-02-swiftui-etats","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","type":"topic","abstract":[{"text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata#Prise-en-main":{"title":"Prise en main","kind":"section","url":"\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","type":"section","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode":{"kind":"project","title":"Présentation d'Xcode","url":"\/tutorials\/test\/01-03-decouverte-xcode","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","role":"project","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code":{"title":"Prise en main de SwiftUI","kind":"project","url":"\/tutorials\/test\/02-02-swiftui-code","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","type":"topic","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}]},"03-03-code-07.swift":{"syntax":"swift","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        DetailView(contact: contact)","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","            .sheet(isPresented: $showAddView) {","                Text(\"hello world\")","            }","        }","    }","}"],"fileName":"exemple.swift","identifier":"03-03-code-07.swift","type":"file","fileType":"swift","highlights":[{"line":30},{"line":31},{"line":32}]},"03-03-code-10.mp4":{"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-10.mp4","traits":["1x","light"]}],"identifier":"03-03-code-10.mp4","poster":null,"alt":null,"type":"video"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Organisons-des-fichiers-de-base":{"kind":"section","title":"Organisons des fichiers de base","url":"\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","role":"pseudoSymbol","abstract":[{"text":"Découvrons comment se passe la création d’un projet sur Xcode.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"url":"\/tutorials\/test\/04-02-intro-urlsession","kind":"project","title":"Récupérer des données depuis un serveur","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","abstract":[{"type":"text","text":"Avec ce cours, vous allez découvrir les bases du développement d’application sur iOS"},{"type":"text","text":" "},{"type":"text","text":"avec des exemples et de la prise en main."},{"text":" ","type":"text"},{"type":"text","text":"L’objectif à la fin de cette semaine est que vous soyez en mesure de développer seul"},{"type":"text","text":" "},{"text":"une application iOS simple mais complète.","type":"text"}],"url":"\/tutorials\/tutorial-table-of-contents","kind":"overview","title":"Sup de Vinci - 2025","role":"overview","type":"topic"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#La-NavigationStack":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie.","type":"text"}],"url":"\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","kind":"section","title":"La NavigationStack","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet":{"title":"Créer son premier projet","role":"pseudoSymbol","abstract":[{"text":"Découvrons comment se passe la création d’un projet sur Xcode.","type":"text"}],"url":"\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","type":"section","kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State":{"kind":"section","title":"Les états avec le property wrapper @State","url":"\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","role":"pseudoSymbol","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}]},"03-03-code-03.swift":{"syntax":"swift","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    Text(contact.name)","                }","            }","            .navigationTitle(\"Contacts\")","        }","    }","}"],"fileName":"exemple.swift","identifier":"03-03-code-03.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":14}]},"03-03-code-05.swift":{"type":"file","highlights":[],"identifier":"03-03-code-05.swift","fileName":"exemple.swift","fileType":"swift","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        DetailView(contact: contact)","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","        }","    }","}","","struct DetailView: View {","    let contact: Contact","","    var body: some View {","        VStack {","            Text(contact.name)","            Text(contact.mail)","        }","        .navigationTitle(\"Détails\")","    }","}"],"syntax":"swift"},"03-03-code-06.swift":{"syntax":"swift","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    @State var showAddView: Bool = false","","    var body: some View {","        NavigationStack {","            List {","                ForEach(contacts) { contact in","                    NavigationLink {","                        DetailView(contact: contact)","                    } label: {","                        Text(contact.name)","                    }","                }","            }","            .navigationTitle(\"Contacts\")","            .toolbar {","                ToolbarItem(placement: .navigationBarTrailing) {","                    Button {","                        showAddView.toggle()","                    } label: {","                        Image(systemName: \"plus.circle\")","                    }","                }","            }","        }","    }","}"],"fileName":"exemple.swift","identifier":"03-03-code-06.swift","type":"file","fileType":"swift","highlights":[]},"03-03-code-08.swift":{"type":"file","highlights":[],"identifier":"03-03-code-08.swift","fileName":"exemple.swift","fileType":"swift","content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    var body: some View {","        NavigationStack {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                TextField(\"E-Mail\", text: $mail)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {}","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {}","                }","            }","        }","    }","}"],"syntax":"swift"},"03-03-code-07.mp4":{"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-07.mp4","traits":["1x","light"]}],"identifier":"03-03-code-07.mp4","poster":null,"alt":null,"type":"video"},"03-03-code-02.swift":{"type":"file","highlights":[],"identifier":"03-03-code-02.swift","fileName":"exemple.swift","fileType":"swift","content":["struct ContentView: View {","    var contacts: [Contact] = [","        .init(name: \"Alice\", phoneNumber: \"0601020304\", mail: \"alice@gmail.com\"),","        .init(name: \"Bob\", phoneNumber: \"0605060708\", mail: \"bob@gmail.com\")","    ]","","    var body: some View {","        List {","            ForEach(contacts) { contact in","                Text(contact.name)","            }","        }","    }","}"],"syntax":"swift"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata":{"url":"\/tutorials\/test\/04-01-intro-swiftdata","kind":"project","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","role":"project","title":"Introduction à SwiftData","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}]},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui#Pr%C3%A9sentation":{"type":"section","title":"Présentation","url":"\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}],"url":"\/tutorials\/test\/01-05-debuter-avec-mac","kind":"project","title":"Débuter avec Mac","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-du-haut":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","kind":"section","title":"Partie du haut","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-trackpad":{"title":"Le trackpad","kind":"section","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","type":"section","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-haut":{"title":"Le volet du haut","kind":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","type":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code#Les-basiques":{"title":"Les basiques","kind":"section","url":"\/tutorials\/test\/02-02-swiftui-code#Les-basiques","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","type":"section","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}]},"03-03-code-08.png":{"variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-08.png","traits":["1x","light"]}],"identifier":"03-03-code-08.png","alt":null,"type":"image"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-clavier":{"title":"Le clavier","kind":"section","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","type":"section","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift":{"title":"Le langage Swift","kind":"project","url":"\/tutorials\/test\/01-02-decouverte-swift","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","type":"topic","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"type":"text","text":" "},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"text":"propriétaire qui elles ne sont pas open-source.","type":"text"}]},"03-03-code-15.mp4":{"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-15.mp4","traits":["1x","light"]}],"identifier":"03-03-code-15.mp4","poster":null,"alt":"","type":"video"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet":{"kind":"project","title":"Créer son premier projet","url":"\/tutorials\/test\/01-04-creer-un-projet","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","role":"project","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Mise-en-place":{"role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","title":"Mise en place","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","kind":"section","type":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift#Les-bases-du-langage":{"title":"Les bases du langage","kind":"section","url":"\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","type":"section","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"text":" ","type":"text"},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}]},"03-03-code-05.mp4":{"poster":null,"type":"video","identifier":"03-03-code-05.mp4","alt":null,"variants":[{"url":"\/videos\/com.williamtomas.test\/03-03-code-05.mp4","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-gauche":{"title":"Le volet gauche","kind":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","type":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI":{"title":"Optimisation du code SwiftUI","role":"project","abstract":[{"text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning.","type":"text"}],"url":"\/tutorials\/test\/03-01-optimisation-swiftui","type":"topic","kind":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Le-property-wrapper-Binding":{"kind":"section","title":"Le property wrapper @Binding","url":"\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","role":"pseudoSymbol","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}]},"exemple-code-swiftui.jpg":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/exemple-code-swiftui.jpg","traits":["1x","light"]}],"identifier":"exemple-code-swiftui.jpg","type":"image"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-SwiftUI":{"title":"Découverte de SwiftUI","kind":"article","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swiftui","role":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","type":"topic","abstract":[]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS":{"kind":"section","title":"Un bref historique du développement iOS","url":"\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","role":"pseudoSymbol","abstract":[{"text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-texte":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","kind":"section","title":"Partie texte","role":"pseudoSymbol","type":"section"},"03-03-code-09.swift":{"syntax":"swift","content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    var body: some View {","        NavigationStack {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {}","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {}","                }","            }","        }","    }","}"],"fileName":"exemple.swift","type":"file","identifier":"03-03-code-09.swift","fileType":"swift","highlights":[{"line":11},{"line":13}]},"03-03-code-06.png":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-06.png","traits":["1x","light"]}],"type":"image","identifier":"03-03-code-06.png"},"03-03-code-02.png":{"alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/03-03-code-02.png","traits":["1x","light"]}],"identifier":"03-03-code-02.png","type":"image"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/Traitement-de-la-donn-e-en-Swift":{"url":"\/tutorials\/tutorial-table-of-contents\/traitement-de-la-donn-e-en-swift","kind":"article","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","role":"article","title":"Traitement de la donnée en Swift","abstract":[]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/SwiftUI-avanc-":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","abstract":[],"url":"\/tutorials\/tutorial-table-of-contents\/swiftui-avanc-","kind":"article","title":"SwiftUI avancé","role":"article","type":"topic"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-image":{"kind":"section","title":"Partie image","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","role":"pseudoSymbol","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-simulateur":{"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","title":"Le simulateur","kind":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple":{"type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"role":"pseudoSymbol","kind":"section","title":"Pourquoi développer sur les plateformes Apple ?","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"},"03-03-code-13.swift":{"type":"file","highlights":[],"identifier":"03-03-code-13.swift","content":["struct AddView: View {","    @State var nom: String = \"\"","    @State var phone: String = \"\"","    @State var mail: String = \"\"","","    @Environment(\\.dismiss) var dismiss","","    var addMethod: (_ nom: String, _ phone: String, _ mail: String) -> ()","","    var body: some View {","        NavigationStack {","            Form {","                TextField(\"Nom\", text: $nom)","                TextField(\"Téléphone\", text: $phone)","                    .keyboardType(.numberPad)","                TextField(\"E-Mail\", text: $mail)","                    .keyboardType(.emailAddress)","            }","            .toolbar {","                ToolbarItemGroup(placement: .cancellationAction) {","                    Button(\"Annuler\") {","                        dismiss()","                    }","                }","","                ToolbarItemGroup(placement: .confirmationAction) {","                    Button(\"OK\") {","                        dismiss()","                        addMethod(nom, phone, mail)","                    }","                }","            }","        }","    }","}"],"fileType":"swift","fileName":"exemple.swift","syntax":"swift"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"url":"\/tutorials\/test\/01-01-decouverte-environnement","kind":"project","title":"Découverte de l'environnement","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#Afficher-une-bottom-sheet":{"type":"section","title":"Afficher une bottom sheet","url":"\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet"}}}