{"identifier":{"url":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","interfaceLanguage":"swift"},"sections":[{"title":"Gérer des états dans une vue","image":"exemple-code-swiftui.jpg","content":[{"inlineContent":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"type":"paragraph"}],"backgroundImage":"exemple-code-swiftui.jpg","kind":"hero","chapter":"SwiftUI avancé"},{"kind":"tasks","tasks":[{"title":"Les états avec le property wrapper @State","stepsSection":[{"media":null,"code":"03-02-code-01.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Pour cet exemple, nous allons nous baser sur le découpage de l’app proposé précédement, et utiliser seulement la partie Boutons."}],"type":"paragraph"}],"type":"step"},{"content":[{"inlineContent":[{"text":"Nous pouvons ajouter une variable de type Bool à notre structure avant notre variable Body. Nous pouvons aussi ajouter une action sur le bouton like, qui fera changer le booléen de valeur avec la fonction ","type":"text"},{"type":"codeVoice","code":".toggle()"},{"text":" du type Bool. Mais ce code ne compile pas et produit une erreur : “Cannot use mutating member on immutable value: ‘self’ is immutable”. Cela vient du fait que SwiftUI utilise des Struct, et que les Struct une fois initiées ne peuvent plus être modifiées à notre guise, elles deviennent ","type":"text"},{"code":"immutable","type":"codeVoice"},{"type":"text","text":". Mais alors comment faire ?"}],"type":"paragraph"}],"media":null,"code":"03-02-code-02.swift","caption":[],"runtimePreview":null,"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pour ce cas de figure, nous allons utiliser le "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" property wrapper. Ajouter cet élément à notre variable permet de déplacer l’espace de stockage de la variable hors de la struct, dans un espace dédié de la mémoire géré par SwiftUI. Notre struct sait ou aller chercher la variable et peut donc en modifier la valeur."}]}],"caption":[],"type":"step","code":"03-02-code-03.swift","runtimePreview":null},{"content":[{"inlineContent":[{"text":"Une fois la gestion de l’état ajoutée à notre vue, il faut que la vue puisse s’adapter en fonction de l’état en cours. Dans le cas d’un booléen, l’état est binaire : vrai ou faux. Swift propose une grammaire pour ce cas de figure qui nous permet de ne pas passer par un ","type":"text"},{"code":"if...else...","type":"codeVoice"},{"type":"text","text":" qui serait lourd à lire et écrire. Au lieu de ça, nous pouvons utiliser "},{"type":"codeVoice","code":" isLiked ? \/\/si c'est vrai : \/\/ si c'est faux"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"03-02-code-04.swift","runtimePreview":"03-02-video-01.mp4","caption":[],"media":null,"type":"step"}],"anchor":"Les-états-avec-le-property-wrapper-State","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[]}]},{"title":"Le property wrapper @Binding","anchor":"Le-property-wrapper-Binding","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Parfois, l’état d’une vue parent doit être transmis à ses vues filles. Inversement, l’état des vues filles peut être intéressant pour la vue mère. Dans notre exemple, la vue Boutons est une vue fille. Remotons son état vers sa vue mère."}],"type":"paragraph"}],"mediaPosition":"trailing"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Nous allons réutiliser le code contenant le ","type":"text"},{"type":"codeVoice","code":"@State"},{"text":" de la partie suivante.","type":"text"}]}],"caption":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Pour un soucis de lisibilité, la vue mère ne contiendra que la partie Boutons.","type":"text"}]}],"name":"Note","type":"aside","style":"note"}],"media":null,"code":"03-02-code-05.swift","type":"step","runtimePreview":null},{"type":"step","media":null,"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"⚠️ Bien faire attention, on passe la variable vers un ","type":"text"},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" en utilisant un ‘$’. En effet, on veut passer l’adresse de la variable et non sa valeur."}]}],"name":"Note","type":"aside"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Nous allons donc ajouter un booléen dans la struct de la vue mère, avec le property wrapper ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":". Mais nous n’allons pas supprimer celui de la vue fille. A la place, nous allons remplacer le "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" par un "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":". Ce nouveau property wrapper indique “j’ai un boolèen isLiked, mais il est stocké ailleurs”. Nous devons donc passer notre booléen de la vue mère vers la vue fille lors de l’initialisation."}]}],"code":"03-02-code-06.swift","runtimePreview":null}]}]},{"action":{"overridingTitle":"Get started","isActive":true,"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"kind":"callToAction","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie."}],"title":"Navigation entre plusieurs écrans","featuredEyebrow":"Tutorial"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode"},{"projects":[{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code"},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"},{"projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","kind":"task"}]}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"]]},"metadata":{"category":"Initiation au développement iOS","title":"Gérer des états dans une vue","role":"project","categoryPathComponent":"Tutorial-Table-of-Contents"},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/test\/03-02-swiftui-etats"]}],"references":{"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Organisons-des-fichiers-de-base":{"role":"pseudoSymbol","type":"section","title":"Organisons des fichiers de base","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","kind":"section","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"url":"\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation":{"abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","title":"Le système d'exploitation","kind":"section","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#Afficher-une-bottom-sheet":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","type":"section","url":"\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie.","type":"text"}],"title":"Afficher une bottom sheet","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store":{"role":"pseudoSymbol","type":"section","title":"Avoir son application sur l'App Store","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"section","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"url":"\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession":{"kind":"project","title":"Récupérer des données depuis un serveur","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","url":"\/tutorials\/test\/04-02-intro-urlsession","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui#Pr%C3%A9sentation":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","url":"\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","abstract":[{"text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile.","type":"text"}],"title":"Présentation","role":"pseudoSymbol","kind":"section"},"03-02-code-04.swift":{"identifier":"03-02-code-04.swift","content":["import SwiftUI","","struct Boutons: View {","    @State var isLiked: Bool = false","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Button(action: {","                    isLiked.toggle()","                }, label: {","                    Image(systemName: isLiked ? \"heart.fill\" : \"heart\")","                        .bold()","                        .foregroundStyle(isLiked ? Color.red : Color.black)","                })","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"],"type":"file","fileType":"swift","fileName":"exemple.swift","syntax":"swift","highlights":[{"line":9},{"line":11},{"line":13}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode":{"role":"project","type":"topic","title":"Présentation d'Xcode","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","kind":"project","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"url":"\/tutorials\/test\/01-03-decouverte-xcode"},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift#Les-bases-du-langage":{"abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"text":" ","type":"text"},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}],"role":"pseudoSymbol","url":"\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","title":"Les bases du langage","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"section"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-texte":{"role":"pseudoSymbol","type":"section","title":"Partie texte","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","kind":"section","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift":{"title":"Le langage Swift","kind":"project","url":"\/tutorials\/test\/01-02-decouverte-swift","type":"topic","abstract":[{"text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"text":" ","type":"text"},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}],"role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents":{"type":"topic","title":"Sup de Vinci - 2025","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","abstract":[{"type":"text","text":"Avec ce cours, vous allez découvrir les bases du développement d’application sur iOS"},{"text":" ","type":"text"},{"type":"text","text":"avec des exemples et de la prise en main."},{"text":" ","type":"text"},{"text":"L’objectif à la fin de cette semaine est que vous soyez en mesure de développer seul","type":"text"},{"type":"text","text":" "},{"type":"text","text":"une application iOS simple mais complète."}],"url":"\/tutorials\/tutorial-table-of-contents","kind":"overview","role":"overview"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata":{"kind":"project","title":"Introduction à SwiftData","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","url":"\/tutorials\/test\/04-01-intro-swiftdata","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac":{"kind":"project","title":"Débuter avec Mac","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","url":"\/tutorials\/test\/01-05-debuter-avec-mac","role":"project","type":"topic"},"exemple-code-swiftui.jpg":{"alt":"","identifier":"exemple-code-swiftui.jpg","variants":[{"traits":["1x","light"],"url":"\/images\/com.williamtomas.test\/exemple-code-swiftui.jpg"}],"type":"image"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-du-haut":{"role":"pseudoSymbol","type":"section","title":"Partie du haut","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","kind":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut"},"03-02-code-05.swift":{"identifier":"03-02-code-05.swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack(alignment: .leading, spacing: 4) {","            Boutons()","        }","    }","}","","struct Boutons: View {","    @State var isLiked: Bool = false","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Button(action: {","                    isLiked.toggle()","                }, label: {","                    Image(systemName: isLiked ? \"heart.fill\" : \"heart\")","                        .bold()","                        .foregroundStyle(isLiked ? Color.red : Color.black)","                })","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"],"type":"file","fileType":"swift","fileName":"exemple.swift","syntax":"swift","highlights":[]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/SwiftUI-avanc-":{"kind":"article","title":"SwiftUI avancé","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","url":"\/tutorials\/tutorial-table-of-contents\/swiftui-avanc-","role":"article","type":"topic"},"03-02-code-01.swift":{"highlights":[],"content":["import SwiftUI","","struct Boutons: View {","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Image(systemName: \"heart\")","                    .bold()","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"],"fileName":"exemple.swift","fileType":"swift","identifier":"03-02-code-01.swift","type":"file","syntax":"swift"},"03-02-video-01.mp4":{"variants":[{"url":"\/videos\/com.williamtomas.test\/03-02-video-01.mp4","traits":["1x","light"]}],"alt":null,"type":"video","poster":null,"identifier":"03-02-video-01.mp4"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-simulateur":{"kind":"section","title":"Le simulateur","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession#Prise-en-main":{"role":"pseudoSymbol","type":"section","title":"Prise en main","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","kind":"section","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"url":"\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS":{"role":"pseudoSymbol","url":"\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","kind":"section","abstract":[{"text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple.","type":"text"}],"title":"Un bref historique du développement iOS","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","type":"section"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple":{"role":"project","type":"topic","title":"Exemple d'utilisation : reproduction d'un post Instagram","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","kind":"project","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","url":"\/tutorials\/test\/03-01-optimisation-swiftui#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","abstract":[{"text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning.","type":"text"}],"title":"Découper notre vue en plusieurs minis vues","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code#Les-basiques":{"type":"section","title":"Les basiques","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"role":"pseudoSymbol","url":"\/tutorials\/test\/02-02-swiftui-code#Les-basiques","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-clavier":{"role":"pseudoSymbol","kind":"section","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}],"title":"Le clavier","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple":{"abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","role":"pseudoSymbol","title":"Pourquoi développer sur les plateformes Apple ?","kind":"section","type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement":{"title":"Découverte de l'environnement","kind":"project","url":"\/tutorials\/test\/01-01-decouverte-environnement","type":"topic","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui":{"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","url":"\/tutorials\/test\/03-03-navigation-swiftui","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie.","type":"text"}],"title":"Navigation entre plusieurs écrans","role":"project","kind":"project"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata#Prise-en-main":{"kind":"section","title":"Prise en main","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","url":"\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Le-property-wrapper-Binding":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","url":"\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","abstract":[{"text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur.","type":"text"}],"title":"Le property wrapper @Binding","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-haut":{"role":"pseudoSymbol","type":"section","title":"Le volet du haut","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","kind":"section","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet":{"role":"project","type":"topic","title":"Créer son premier projet","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","kind":"project","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"url":"\/tutorials\/test\/01-04-creer-un-projet"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet":{"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","role":"pseudoSymbol","url":"\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","title":"Créer son premier projet","type":"section","abstract":[{"text":"Découvrons comment se passe la création d’un projet sur Xcode.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI":{"kind":"project","title":"Optimisation du code SwiftUI","abstract":[{"text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","url":"\/tutorials\/test\/03-01-optimisation-swiftui","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-SwiftUI":{"kind":"article","title":"Découverte de SwiftUI","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swiftui","role":"article","type":"topic"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-Swift-et-de-Xcode":{"role":"article","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swift-et-de-xcode","title":"Découverte de Swift et de Xcode","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","abstract":[],"type":"topic","kind":"article"},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code":{"type":"topic","kind":"project","abstract":[{"text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue.","type":"text"}],"url":"\/tutorials\/test\/02-02-swiftui-code","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","title":"Prise en main de SwiftUI"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State":{"title":"Les états avec le property wrapper @State","kind":"section","url":"\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","type":"section","abstract":[{"text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State"},"03-02-code-03.swift":{"identifier":"03-02-code-03.swift","highlights":[{"line":4},{"line":9}],"type":"file","syntax":"swift","fileName":"exemple.swift","fileType":"swift","content":["import SwiftUI","","struct Boutons: View {","    @State var isLiked: Bool = false","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Button(action: {","                    isLiked.toggle() \/\/ fonctionne","                }, label: {","                    Image(systemName: \"heart\")","                        .bold()","                })","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-actions":{"kind":"section","title":"Partie actions","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui":{"kind":"project","title":"SwiftUI c'est quoi ?","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","url":"\/tutorials\/test\/02-01-intro-swiftui","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","type":"topic","url":"\/tutorials\/test\/03-02-swiftui-etats","abstract":[{"text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur.","type":"text"}],"title":"Gérer des états dans une vue","role":"project","kind":"project"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/Traitement-de-la-donn-e-en-Swift":{"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","url":"\/tutorials\/tutorial-table-of-contents\/traitement-de-la-donn-e-en-swift","abstract":[],"title":"Traitement de la donnée en Swift","role":"article","kind":"article"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#La-NavigationStack":{"role":"pseudoSymbol","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est ce que nous allons découvrir dans cette partie.","type":"text"}],"kind":"section","title":"La NavigationStack","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","url":"\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},"03-02-code-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct Boutons: View {","    var isLiked: Bool = false","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Button(action: {","                    isLiked.toggle() \/\/ ERROR : Cannot use mutating member on immutable value: 'self' is immutable","                }, label: {","                    Image(systemName: \"heart\")","                        .bold()","                })","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"],"fileName":"exemple.swift","highlights":[{"line":4},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"fileType":"swift","identifier":"03-02-code-02.swift","type":"file"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-bas":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"title":"Le volet du bas"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-gauche":{"kind":"section","title":"Le volet gauche","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-trackpad":{"kind":"section","title":"Le trackpad","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-image":{"kind":"section","title":"Partie image","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","role":"pseudoSymbol","type":"section"},"03-02-code-06.swift":{"syntax":"swift","type":"file","content":["import SwiftUI","","struct ContentView: View {","    @State var isLiked: Bool = false","    var body: some View {","        VStack(alignment: .leading, spacing: 4) {","            Boutons(isLiked: $isLiked)","        }","    }","}","","struct Boutons: View {","    @Binding var isLiked: Bool","    var body: some View {","        HStack {","            HStack(spacing: 4) {","                Button(action: {","                    isLiked.toggle()","                }, label: {","                    Image(systemName: isLiked ? \"heart.fill\" : \"heart\")","                        .bold()","                        .foregroundStyle(isLiked ? Color.red : Color.black)","                })","","                Text(\"55,9K\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"message\")","                    .bold()","","                Text(\"499\")","            }","            .font(.title3)","","            HStack(spacing: 4) {","                Image(systemName: \"paperplane\")","                    .bold()","","                Text(\"312\")","            }","            .font(.title3)","","            Spacer()","","            Image(systemName: \"bookmark\")","                .bold()","                .font(.title3)","        }","    }","}"],"identifier":"03-02-code-06.swift","fileName":"exemple.swift","highlights":[{"line":4},{"line":7},{"line":13}],"fileType":"swift"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Mise-en-place":{"role":"pseudoSymbol","type":"section","title":"Mise en place","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","kind":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-de-droite":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","abstract":[{"text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store.","type":"text"}],"title":"Le volet de droite","role":"pseudoSymbol","kind":"section"}}}