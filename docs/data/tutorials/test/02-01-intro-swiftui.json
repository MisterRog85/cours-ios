{"variants":[{"paths":["\/tutorials\/test\/02-01-intro-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","metadata":{"role":"project","title":"SwiftUI c'est quoi ?","categoryPathComponent":"Tutorial-Table-of-Contents","category":"Initiation au développement iOS"},"sections":[{"kind":"hero","title":"SwiftUI c'est quoi ?","chapter":"Découverte de SwiftUI","backgroundImage":"swiftui.png","image":"swiftui.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}]}]},{"tasks":[{"anchor":"Présentation","stepsSection":[{"runtimePreview":null,"caption":[],"media":"storyboard.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Au tout début du développement iOS, les vues étaient créées dans des Storyboards. Cette approche est très ancienne car c’était déjà la méthode employée au début des années 2000 pour créer des interfaces d’applications sur Mac. Les éléments sont ajoutés en les faisant glisser avec la souris. Ils sont organisés entre eux grâce à des contraintes et reliés au fichier de code grâce à des déclarations de variables spécifiques. Un Storyboard regroupe un ou plusieurs écrans, si il y a plusieurs écrans alors il peut aussi gérer la navigaiton entre les écrans."}]}],"type":"step","code":null},{"caption":[],"runtimePreview":null,"code":null,"content":[{"inlineContent":[{"type":"text","text":"En UIKit il est aussi possible de créer ses vues directement en code pour se passer de Storyboard. C’est une approche verbeuse mais appréciée en entreprise et des développeurs. En effet l’outil de création des Storyboard est complexe et le travail collaboratif sur ces fichiers est un calvaire."}],"type":"paragraph"}],"type":"step","media":"code-uikit.png"},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"A titre de comparaison, le code nécessaire en SwiftUI pour créer la même vue que l’exemple UIKit précédent se limite à ça :","type":"text"}]}],"type":"step","code":null,"runtimePreview":null,"media":"code-swiftui-comparaison-uikit.png"},{"caption":[],"runtimePreview":null,"code":null,"media":"preview-code-swiftui.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"L’interface de création de vues SwiftUI se présente comme ceci. A gauche le fichier de code, à droite la preview. La preview est interactive, c’est à dire qu’on peut directement voir ce que l’on code sans avoir besoin de re-builder ! La preview a sa propre console, mais ne tient pas compte des breakpoints. La preview a aussi ses propre paramètres comme le thème sombre ou l’orientation."}]}],"type":"step"}],"contentSection":[{"content":[],"kind":"contentAndMedia","mediaPosition":"trailing"}],"title":"Présentation"}],"kind":"tasks"},{"kind":"callToAction","action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","type":"reference","isActive":true,"overridingTitle":"Get started"},"title":"Prise en main de SwiftUI","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"featuredEyebrow":"Tutorial"}],"hierarchy":{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","modules":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","projects":[{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","kind":"task"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI"},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"}]},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","kind":"task"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata"},{"sections":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","kind":"task"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession"}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift"}],"paths":[["doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui"},"references":{"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State":{"type":"section","url":"\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","title":"Les états avec le property wrapper @State","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}]},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#Afficher-une-bottom-sheet":{"url":"\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","type":"section","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"title":"Afficher une bottom sheet","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-clavier":{"type":"section","title":"Le clavier","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-clavier","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}]},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui":{"type":"topic","title":"SwiftUI c'est quoi ?","url":"\/tutorials\/test\/02-01-intro-swiftui","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","role":"project","kind":"project","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}]},"storyboard.png":{"type":"image","alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/storyboard.png","traits":["1x","light"]}],"identifier":"storyboard.png"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-trackpad":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-trackpad","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"kind":"section","title":"Le trackpad","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet":{"type":"topic","url":"\/tutorials\/test\/01-04-creer-un-projet","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","kind":"project","title":"Créer son premier projet","role":"project"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/SwiftUI-avanc-":{"type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/swiftui-avanc-","title":"SwiftUI avancé","kind":"article","role":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","abstract":[]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple":{"type":"topic","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple","title":"Exemple d'utilisation : reproduction d'un post Instagram","kind":"project","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui#Pr%C3%A9sentation":{"type":"section","title":"Présentation","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","url":"\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"kind":"section","title":"Un bref historique du développement iOS","role":"pseudoSymbol"},"code-uikit.png":{"type":"image","alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/code-uikit.png","traits":["1x","light"]}],"identifier":"code-uikit.png"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata#Prise-en-main":{"url":"\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","kind":"section","title":"Prise en main","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats":{"title":"Gérer des états dans une vue","role":"project","type":"topic","url":"\/tutorials\/test\/03-02-swiftui-etats","abstract":[{"text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","kind":"project"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents":{"url":"\/tutorials\/tutorial-table-of-contents","kind":"overview","title":"Sup de Vinci - 2025","abstract":[{"type":"text","text":"Avec ce cours, vous allez découvrir les bases du développement d’application sur iOS"},{"type":"text","text":" "},{"type":"text","text":"avec des exemples et de la prise en main."},{"text":" ","type":"text"},{"type":"text","text":"L’objectif à la fin de cette semaine est que vous soyez en mesure de développer seul"},{"text":" ","type":"text"},{"type":"text","text":"une application iOS simple mais complète."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","role":"overview","type":"topic"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#La-NavigationStack":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","type":"section","abstract":[{"text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie.","type":"text"}],"url":"\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","title":"La NavigationStack","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","url":"\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"kind":"section","title":"Pourquoi développer sur les plateformes Apple ?","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/Traitement-de-la-donn-e-en-Swift":{"type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/traitement-de-la-donn-e-en-swift","title":"Traitement de la donnée en Swift","kind":"article","role":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","abstract":[]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-Swift-et-de-Xcode":{"type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swift-et-de-xcode","title":"Découverte de Swift et de Xcode","kind":"article","role":"article","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","abstract":[]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift#Les-bases-du-langage":{"type":"section","url":"\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","title":"Les bases du langage","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"type":"text","text":" "},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-simulateur":{"url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","kind":"section","title":"Le simulateur","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","role":"pseudoSymbol","type":"section"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues":{"title":"Découper notre vue en plusieurs minis vues","url":"\/tutorials\/test\/03-01-optimisation-swiftui#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","kind":"section","abstract":[{"text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-haut":{"title":"Le volet du haut","role":"pseudoSymbol","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","abstract":[{"text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-bas":{"type":"section","title":"Le volet du bas","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}]},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata":{"title":"Introduction à SwiftData","role":"project","type":"topic","url":"\/tutorials\/test\/04-01-intro-swiftdata","abstract":[{"text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI.","type":"text"}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","kind":"project"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation":{"title":"Le système d'exploitation","url":"\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac#Le-syst%C3%A8me-dexploitation","kind":"section","abstract":[{"text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift":{"title":"Le langage Swift","url":"\/tutorials\/test\/01-02-decouverte-swift","role":"project","type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","kind":"project","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"type":"text","text":" "},{"text":"Apple intervient comme contributeur principal au projet, et construit des librairies","type":"text"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement":{"type":"topic","url":"\/tutorials\/test\/01-01-decouverte-environnement","title":"Découverte de l'environnement","kind":"project","role":"project","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}]},"swiftui.png":{"type":"image","alt":"","variants":[{"url":"\/images\/com.williamtomas.test\/swiftui.png","traits":["1x","light"]}],"identifier":"swiftui.png"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode":{"url":"\/tutorials\/test\/01-03-decouverte-xcode","kind":"project","title":"Présentation d'Xcode","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","role":"project","type":"topic"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Le-property-wrapper-Binding":{"type":"section","title":"Le property wrapper @Binding","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}]},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Organisons-des-fichiers-de-base":{"type":"section","url":"\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","title":"Organisons des fichiers de base","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}]},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","url":"\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"kind":"section","title":"Créer son premier projet","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-SwiftUI":{"type":"topic","title":"Découverte de SwiftUI","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swiftui","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","role":"article","kind":"article","abstract":[]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Mise-en-place":{"url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","type":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"title":"Mise en place","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-actions":{"title":"Partie actions","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","kind":"section","abstract":[{"text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI":{"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","url":"\/tutorials\/test\/03-01-optimisation-swiftui","abstract":[{"type":"text","text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning."}],"kind":"project","title":"Optimisation du code SwiftUI","role":"project"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","type":"topic","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"url":"\/tutorials\/test\/03-03-navigation-swiftui","title":"Navigation entre plusieurs écrans","role":"project","kind":"project"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-image":{"type":"section","title":"Partie image","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"preview-code-swiftui.png":{"identifier":"preview-code-swiftui.png","alt":"","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.williamtomas.test\/preview-code-swiftui.png"}]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store":{"type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"section","title":"Avoir son application sur l'App Store","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/01-05-debuter-avec-mac":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-05-debuter-avec-mac","type":"topic","abstract":[{"type":"text","text":"Pour certains d’entre vous, ce cours sera la première prise en main d’un Mac. Découvrons quelques spécificités liées à cet environnement."}],"url":"\/tutorials\/test\/01-05-debuter-avec-mac","title":"Débuter avec Mac","role":"project","kind":"project"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-texte":{"type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","title":"Partie texte","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-du-haut":{"type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","title":"Partie du haut","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession#Prise-en-main":{"title":"Prise en main","url":"\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","kind":"section","abstract":[{"text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique.","type":"text"}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-de-droite":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"kind":"section","title":"Le volet de droite","role":"pseudoSymbol"},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code#Les-basiques":{"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","type":"section","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"url":"\/tutorials\/test\/02-02-swiftui-code#Les-basiques","title":"Les basiques","role":"pseudoSymbol","kind":"section"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-gauche":{"type":"section","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"kind":"section","title":"Le volet gauche","role":"pseudoSymbol"},"code-swiftui-comparaison-uikit.png":{"identifier":"code-swiftui-comparaison-uikit.png","variants":[{"url":"\/images\/com.williamtomas.test\/code-swiftui-comparaison-uikit.png","traits":["1x","light"]}],"type":"image","alt":""},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code":{"type":"topic","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","url":"\/tutorials\/test\/02-02-swiftui-code","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"kind":"project","title":"Prise en main de SwiftUI","role":"project"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession":{"type":"topic","title":"Récupérer des données depuis un serveur","url":"\/tutorials\/test\/04-02-intro-urlsession","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","role":"project","kind":"project","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}]}}}