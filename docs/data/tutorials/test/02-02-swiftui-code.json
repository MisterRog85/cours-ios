{"variants":[{"paths":["\/tutorials\/test\/02-02-swiftui-code"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}]}],"kind":"hero","title":"Prise en main de SwiftUI","chapter":"Découverte de SwiftUI","backgroundImage":"exemple-code-swiftui.jpg","image":"exemple-code-swiftui.jpg"},{"kind":"tasks","tasks":[{"anchor":"Les-basiques","title":"Les basiques","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"trailing"}],"stepsSection":[{"code":"02-02-code-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lorsque l’on créé un nouveau fichier SwiftUI, il vient avec du code pré-fait. La partie du haut contient la vue en elle même, la partie du bas permet d’avoir la preview en direct sur le côté droit. Une vue SwiftUI est une struct qui répond au protocol View. Pour conformer au protocol, elle doit comporter au moins une varible body de type View. C’est dans cette variable que l’on tapera notre propre code."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-02-code-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Un des éléments les plus commun en SwiftUI est "},{"type":"codeVoice","code":"Text()"},{"type":"text","text":", qui prend comme paramètre une String. C’est l’élément de base lorsque vous créez une nouvelle vue SwiftUI. Nous verrons plus tard comment apporter des modifications à notre texte."}]}],"caption":[],"type":"step","runtimePreview":"02-02-code-02.png","media":null},{"code":"02-02-code-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Un autre élément très commun à utiliser dans une application sont les images. On utilise pour cela l’élément "},{"type":"codeVoice","code":"Image()"},{"type":"text","text":". Il peut prendre deux paramètres distincts : soit une String faisant référence au nom d’une image que l’on a importé dans nos Assets, soit une String faisant référence à un SystemName qui permet d’afficher une icône SFSymbols. SFSymbols est un ensemble d’icônes pré fait et mis à disposition par Apple pour être utilisé dans les apps iOS."}]}],"caption":[],"type":"step","runtimePreview":"02-02-code-03.png","media":null},{"code":"02-02-code-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Le dernier élément basique de SwiftUI est le "},{"type":"codeVoice","code":"Button()"},{"type":"text","text":" qui peut être construit de deux façons : soit avec un simple texte, soit avec une vue SwiftUI complète ! Dans les deux cas, l’action à réaliser se met entre crochets."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"De base, un élément "},{"type":"codeVoice","code":"Button()"},{"type":"text","text":" sera affiché en bleu pour indiquer à l’utilisateur que l’élément est cliquable."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"02-02-code-04.png","media":null},{"code":"02-02-code-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Les éléments que l’on a présenté jusqu’à présent sont fonctionnels mais on une allure un peu brute. Pour pouvoir les personnaliser, nous devons utliser des modificateurs. Ce sont des paramètres qui l’on rajoute à la suite de notre vue. Certains modificateurs vont être communs à toutes les vues SwiftUI comme "},{"type":"codeVoice","code":".foregroundStyle()"},{"type":"text","text":" ou bien certains seront spécifiques comme le "},{"type":"codeVoice","code":".font()"},{"type":"text","text":" pour le texte. En tant que développeur, nous avons la possibilité de créer notre propre modificateurs, spécifiques pour nos besoins."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"⚠️ L’ordre de déclaration des modificateurs est important ! ⚠️"}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"02-02-code-05.png","media":null},{"code":"02-02-code-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pour afficher plusieurs éléments dans un même écran, SwiftUI a besoin des les organiser. Il va pour cela utiliser les stacks. Il existe trois types de stack : les "},{"type":"codeVoice","code":"VStack"},{"type":"text","text":", les "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" et les "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ici la vue est une couleur avec un cadre défini, une couleur étant considérée par SwiftUI comme un élément graphique a part entière."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"02-02-code-06.png","media":null},{"code":"02-02-code-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Le stacks peuvent prendre un paramètre "},{"type":"codeVoice","code":"(spacer:)"},{"type":"text","text":" pour définir un espace par défaut entre les éléments qu’elles vont contenir. En SwiftUI, il existe un élément "},{"type":"codeVoice","code":"Spacer()"},{"type":"text","text":", considéré comme une vue, qui prendra tout l’espace disponible entre deux vues."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entre "},{"type":"codeVoice","code":"(spacer:)"},{"type":"text","text":" et "},{"type":"codeVoice","code":"Spacer()"},{"type":"text","text":", c’est "},{"type":"codeVoice","code":"Spacer()"},{"type":"text","text":" qui sera pris en compte."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"02-02-code-07.png","media":null},{"code":"02-02-code-08.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lors de l’exemple précédent, les éléments espacés par le "},{"type":"codeVoice","code":"Spacer()"},{"type":"text","text":" sont en bordure d’écran. La majeure partie du temps, c’est un comportement que l’on ne souhaite pas avoir. En effet, les apps mobiles sont sensées avoir une safe area tout autour de l’écran pour éviter des clics involontaires lorsque l’on tient le téléphone. Pour ajouter une marge aux éléments SwiftUI, on utilise le modificateurs "},{"type":"codeVoice","code":".padding()"},{"type":"text","text":". Il peut être utilisé tel quel, il ajoutera alors une marge sur touts les axes de 16 pixels. On peut aussi indiquer en paramètre de padding l’axe ainsi que la taille souhaités."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On peut utiliser plusieurs "},{"type":"codeVoice","code":".padding()"},{"type":"text","text":" sur le même élément."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"02-02-code-08.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Exemple d'utilisation : reproduction d'un post Instagram","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}]}],"identifier":{"url":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Prise en main de SwiftUI","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Initiation au développement iOS"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base"}]}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"}]}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet"}]}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","projects":[{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main"}]},{"reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","sections":[{"kind":"task","reference":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"}]}]}],"reference":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI"]]},"references":{"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata":{"role":"project","title":"Introduction à SwiftData","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata","kind":"project","type":"topic","url":"\/tutorials\/test\/04-01-intro-swiftdata"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#Afficher-une-bottom-sheet":{"role":"pseudoSymbol","title":"Afficher une bottom sheet","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet","kind":"section","type":"section","url":"\/tutorials\/test\/03-03-navigation-swiftui#Afficher-une-bottom-sheet"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-texte":{"role":"pseudoSymbol","title":"Partie texte","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte","kind":"section","type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-texte"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/Traitement-de-la-donn-e-en-Swift":{"role":"article","title":"Traitement de la donnée en Swift","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/Traitement-de-la-donn-e-en-Swift","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/traitement-de-la-donn-e-en-swift"},"02-02-code-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        Text(\"Hello, world!\")","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-02.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code":{"role":"project","title":"Prise en main de SwiftUI","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code","kind":"project","type":"topic","url":"\/tutorials\/test\/02-02-swiftui-code"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-gauche":{"role":"pseudoSymbol","title":"Le volet gauche","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche","kind":"section","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-gauche"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Le-property-wrapper-Binding":{"role":"pseudoSymbol","title":"Le property wrapper @Binding","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding","kind":"section","type":"section","url":"\/tutorials\/test\/03-02-swiftui-etats#Le-property-wrapper-Binding"},"doc://com.williamtomas.test/tutorials/test/04-01-intro-swiftdata#Prise-en-main":{"role":"pseudoSymbol","title":"Prise en main","abstract":[{"type":"text","text":"Introduit en 2023 en remplacement de CoreData, SwiftData vise à rendre plus simple le stockage de données sur le téléphone en s’intégrant bien dans une application basée sur SwiftUI."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main","kind":"section","type":"section","url":"\/tutorials\/test\/04-01-intro-swiftdata#Prise-en-main"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State":{"role":"pseudoSymbol","title":"Les états avec le property wrapper @State","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats#Les-%C3%A9tats-avec-le-property-wrapper-State","kind":"section","type":"section","url":"\/tutorials\/test\/03-02-swiftui-etats#Les-%25C3%25A9tats-avec-le-property-wrapper-State"},"02-02-code-03.png":{"alt":"","type":"image","identifier":"02-02-code-03.png","variants":[{"url":"\/images\/02-02-code-03.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Organisons-des-fichiers-de-base":{"role":"pseudoSymbol","title":"Organisons des fichiers de base","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base","kind":"section","type":"section","url":"\/tutorials\/test\/01-04-creer-un-projet#Organisons-des-fichiers-de-base"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Mise-en-place":{"role":"pseudoSymbol","title":"Mise en place","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place","kind":"section","type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Mise-en-place"},"02-02-code-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack {","            Text(\"Hello World !\")","                .font(.largeTitle)","                .fontWeight(.heavy)","                .underline(color: .red)","","            Image(systemName: \"sun.min\")","                .resizable()","                .frame(width: 50, height: 50)","                .foregroundStyle(Color.green)","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-05.swift","type":"file","fileType":"swift","highlights":[]},"exemple-code-swiftui.jpg":{"alt":"","type":"image","identifier":"exemple-code-swiftui.jpg","variants":[{"url":"\/images\/exemple-code-swiftui.jpg","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store":{"role":"pseudoSymbol","title":"Avoir son application sur l'App Store","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store","kind":"section","type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Avoir-son-application-sur-lApp-Store"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-du-haut":{"role":"pseudoSymbol","title":"Partie du haut","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut","kind":"section","type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-du-haut"},"02-02-code-07.png":{"alt":"","type":"image","identifier":"02-02-code-07.png","variants":[{"url":"\/images\/02-02-code-07.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift#Les-bases-du-langage":{"role":"pseudoSymbol","title":"Les bases du langage","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"type":"text","text":" "},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage","kind":"section","type":"section","url":"\/tutorials\/test\/01-02-decouverte-swift#Les-bases-du-langage"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession":{"role":"project","title":"Récupérer des données depuis un serveur","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession","kind":"project","type":"topic","url":"\/tutorials\/test\/04-02-intro-urlsession"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple":{"role":"pseudoSymbol","title":"Pourquoi développer sur les plateformes Apple ?","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%C3%A9velopper-sur-les-plateformes-Apple","kind":"section","type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Pourquoi-d%25C3%25A9velopper-sur-les-plateformes-Apple"},"02-02-code-02.png":{"alt":"","type":"image","identifier":"02-02-code-02.png","variants":[{"url":"\/images\/02-02-code-02.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode":{"role":"project","title":"Présentation d'Xcode","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode","kind":"project","type":"topic","url":"\/tutorials\/test\/01-03-decouverte-xcode"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-actions":{"role":"pseudoSymbol","title":"Partie actions","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions","kind":"section","type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-actions"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues":{"role":"pseudoSymbol","title":"Découper notre vue en plusieurs minis vues","abstract":[{"type":"text","text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI#D%C3%A9couper-notre-vue-en-plusieurs-minis-vues","kind":"section","type":"section","url":"\/tutorials\/test\/03-01-optimisation-swiftui#D%25C3%25A9couper-notre-vue-en-plusieurs-minis-vues"},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui":{"role":"project","title":"Navigation entre plusieurs écrans","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui","kind":"project","type":"topic","url":"\/tutorials\/test\/03-03-navigation-swiftui"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui":{"role":"project","title":"SwiftUI c'est quoi ?","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui","kind":"project","type":"topic","url":"\/tutorials\/test\/02-01-intro-swiftui"},"doc://com.williamtomas.test/tutorials/test/03-02-swiftui-etats":{"role":"project","title":"Gérer des états dans une vue","abstract":[{"type":"text","text":"Jusqu’à présent les vues que l’on a traité sont statiques, c’est à dire qu’elles ne s’adaptent pas en fonction d’une action de l’utilisateur. Mais il est important de pouvoir créer des vues interactives, avec un ou plusieurs états, pour répondre aux actions de l’utilisateur."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-02-swiftui-etats","kind":"project","type":"topic","url":"\/tutorials\/test\/03-02-swiftui-etats"},"02-02-code-08.png":{"alt":"","type":"image","identifier":"02-02-code-08.png","variants":[{"url":"\/images\/02-02-code-08.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet":{"role":"project","title":"Créer son premier projet","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet","kind":"project","type":"topic","url":"\/tutorials\/test\/01-04-creer-un-projet"},"02-02-code-06.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack(spacing: 40) {","            Text(\"⬇ HStack ⬇\") \/\/ horizontal","            HStack {","                Color.red.frame(width: 60, height: 60)","","                Color.blue.frame(width: 40, height: 40)","            }","","            Text(\"⬇ VStack ⬇\") \/\/ vertical","            VStack {","                Color.red.frame(width: 60, height: 60)","","                Color.blue.frame(width: 40, height: 40)","            }","","            Text(\"⬇ ZStack ⬇\") \/\/ superposition","            ZStack {","                Color.red.frame(width: 60, height: 60)","","                Color.blue.frame(width: 40, height: 40)","            }","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-06.swift","type":"file","fileType":"swift","highlights":[]},"02-02-code-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack {","            Button(\"Hello World !\") {","                print(\"hello world\")","            }","","            Button {","                print(\"hello world\")","            } label: {","                Image(systemName: \"sun.min\")","            }","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-04.swift","type":"file","fileType":"swift","highlights":[]},"02-02-code-08.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack(spacing: 40) {","","            HStack {","                Color.red.frame(width: 60, height: 60)","","                Spacer()","","                Color.blue.frame(width: 40, height: 40)","            }","            .padding()","","            HStack {","                Color.red.frame(width: 60, height: 60)","","                Spacer()","","                Color.blue.frame(width: 40, height: 40)","            }","            .padding(.horizontal, 100)","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-08.swift","type":"file","fileType":"swift","highlights":[]},"02-02-code-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack {","            Image(\"swiftui\")","","            Image(systemName: \"sun.min\")","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-03.swift","type":"file","fileType":"swift","highlights":[]},"02-02-code-07.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        VStack(spacing: 40) {","","            HStack(spacing: 40) {","                Color.red.frame(width: 60, height: 60)","","                Color.blue.frame(width: 40, height: 40)","            }","","            HStack {","                Color.red.frame(width: 60, height: 60)","","                Spacer() \/\/ prend tout l'espace possible entre nos vues","","                Color.blue.frame(width: 40, height: 40)","            }","        }","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-07.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.williamtomas.test/tutorials/test/01-02-decouverte-swift":{"role":"project","title":"Le langage Swift","abstract":[{"type":"text","text":"Comme présenté dans la partie précédente, Swift est un langage orienté objet open-source."},{"type":"text","text":" "},{"type":"text","text":"Apple intervient comme contributeur principal au projet, et construit des librairies"},{"type":"text","text":" "},{"type":"text","text":"propriétaire qui elles ne sont pas open-source."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-02-decouverte-swift","kind":"project","type":"topic","url":"\/tutorials\/test\/01-02-decouverte-swift"},"doc://com.williamtomas.test/tutorials/test/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet":{"role":"pseudoSymbol","title":"Créer son premier projet","abstract":[{"type":"text","text":"Découvrons comment se passe la création d’un projet sur Xcode."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-04-creer-un-projet#Cr%C3%A9er-son-premier-projet","kind":"section","type":"section","url":"\/tutorials\/test\/01-04-creer-un-projet#Cr%25C3%25A9er-son-premier-projet"},"02-02-code-05.png":{"alt":"","type":"image","identifier":"02-02-code-05.png","variants":[{"url":"\/images\/02-02-code-05.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/02-02-swiftui-code#Les-basiques":{"role":"pseudoSymbol","title":"Les basiques","abstract":[{"type":"text","text":"Dans cette section, nous allons parcourir les éléments graphiques basiques proposés par SwiftUI pour créer une vue."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-02-swiftui-code#Les-basiques","kind":"section","type":"section","url":"\/tutorials\/test\/02-02-swiftui-code#Les-basiques"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"Sup de Vinci - Mars 2024","abstract":[{"type":"text","text":"Avec ce cours, vous allez découvrir les bases du développement d’application sur iOS"},{"type":"text","text":" "},{"type":"text","text":"avec des exemples et de la prise en main."},{"type":"text","text":" "},{"type":"text","text":"L’objectif à la fin de cette semaine est que vous soyez en mesure de développer seul"},{"type":"text","text":" "},{"type":"text","text":"une application iOS simple mais complète."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-simulateur":{"role":"pseudoSymbol","title":"Le simulateur","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur","kind":"section","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-simulateur"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-bas":{"role":"pseudoSymbol","title":"Le volet du bas","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas","kind":"section","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-bas"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple#Partie-image":{"role":"pseudoSymbol","title":"Partie image","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image","kind":"section","type":"section","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple#Partie-image"},"02-02-code-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    var body: some View {","        Text(\"Hello, world!\")","    }","}","","#Preview {","    ContentView()","}"],"fileName":"exemple.swift","identifier":"02-02-code-01.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-SwiftUI":{"role":"article","title":"Découverte de SwiftUI","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-SwiftUI","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swiftui"},"doc://com.williamtomas.test/tutorials/test/02-03-swiftui-insta-exemple":{"role":"project","title":"Exemple d'utilisation : reproduction d'un post Instagram","abstract":[{"type":"text","text":"Nous avons vu dans la section précédentes des éléments basiques pour créer des vues en SwiftUI. L’approche était volontairement assez théorique et rudimentaire. Mettons à l’usage ces éléments pour créer une vue complète ! Dans cet exemple, nous allons utiliser SwiftUI pour re-créer la vue qui présente un post Instagram."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-03-swiftui-insta-exemple","kind":"project","type":"topic","url":"\/tutorials\/test\/02-03-swiftui-insta-exemple"},"doc://com.williamtomas.test/tutorials/test/03-01-optimisation-SwiftUI":{"role":"project","title":"Optimisation du code SwiftUI","abstract":[{"type":"text","text":"Dans le chapitre précédent, notre code SwiftUI est fonctionnel et il nous permet d’afficher notre vue convenablement. Mais le fichier de code généré est long, dense : on peut vite s’y perdre ! Le compilateur Swift n’aime pas non plus les vues SwiftUI avec trop de lignes de code, qui vont lui demander du temps d’évaluation supplémentaire et peuvent générer un warning."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-01-optimisation-SwiftUI","kind":"project","type":"topic","url":"\/tutorials\/test\/03-01-optimisation-swiftui"},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-du-haut":{"role":"pseudoSymbol","title":"Le volet du haut","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut","kind":"section","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-du-haut"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/D-couverte-de-Swift-et-de-Xcode":{"role":"article","title":"Découverte de Swift et de Xcode","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/D-couverte-de-Swift-et-de-Xcode","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/d-couverte-de-swift-et-de-xcode"},"02-02-code-04.png":{"alt":"","type":"image","identifier":"02-02-code-04.png","variants":[{"url":"\/images\/02-02-code-04.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/03-03-navigation-swiftui#La-NavigationStack":{"role":"pseudoSymbol","title":"La NavigationStack","abstract":[{"type":"text","text":"Pour le moment nous avons vu comment créer un vue en SwiftUI et comment la faire réagir aux actions de l’utilisateur. Mais une application n’est pas constituée d’un seul écran, et il faut naviguer entre ces différents écrans. C’est que nous allons découvrir dans cette partie."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack","kind":"section","type":"section","url":"\/tutorials\/test\/03-03-navigation-swiftui#La-NavigationStack"},"doc://com.williamtomas.test/tutorials/test/02-01-intro-swiftui#Pr%C3%A9sentation":{"role":"pseudoSymbol","title":"Présentation","abstract":[{"type":"text","text":"Introduit en 2019, SwiftUI est la nouvelle approche proposée par Apple pour créer des vues. SwiftUI permet de remplacer les vues créer via des Storyboard ou via du code UIKit. UIKit n’est cependant pas complètement rendu obsolète car SwiftUI est, in fine, une surcouche à UIKit. Ici la création des vues se fait de manière déclarative avec un apperçu en direct dans la preview interactive. SwiftUI fonctionne sur toutes les plateformes de la marque, le rendant très versatile."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/02-01-intro-swiftui#Pr%C3%A9sentation","kind":"section","type":"section","url":"\/tutorials\/test\/02-01-intro-swiftui#Pr%25C3%25A9sentation"},"02-02-code-06.png":{"alt":"","type":"image","identifier":"02-02-code-06.png","variants":[{"url":"\/images\/02-02-code-06.png","traits":["1x","light"]}]},"doc://com.williamtomas.test/tutorials/test/01-03-decouverte-xcode#Le-volet-de-droite":{"role":"pseudoSymbol","title":"Le volet de droite","abstract":[{"type":"text","text":"Xcode est l’IDE maison proposé par Apple pour développer sur ses plateformes. Il embarque tout le nécessaire pour commencer, avec le compilateur et le simulateur. Xcode est aussi nécessaire pour envoyer  son application sur l’App Store."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite","kind":"section","type":"section","url":"\/tutorials\/test\/01-03-decouverte-xcode#Le-volet-de-droite"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS":{"role":"pseudoSymbol","title":"Un bref historique du développement iOS","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%C3%A9veloppement-iOS","kind":"section","type":"section","url":"\/tutorials\/test\/01-01-decouverte-environnement#Un-bref-historique-du-d%25C3%25A9veloppement-iOS"},"doc://com.williamtomas.test/tutorials/Tutorial-Table-of-Contents/SwiftUI-avanc-":{"role":"article","title":"SwiftUI avancé","abstract":[],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/Tutorial-Table-of-Contents\/SwiftUI-avanc-","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/swiftui-avanc-"},"doc://com.williamtomas.test/tutorials/test/01-01-decouverte-environnement":{"role":"project","title":"Découverte de l'environnement","abstract":[{"type":"text","text":"Découvrons les éléments qui entourent le développement d’application dans l’éco système Apple."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/01-01-decouverte-environnement","kind":"project","type":"topic","url":"\/tutorials\/test\/01-01-decouverte-environnement"},"doc://com.williamtomas.test/tutorials/test/04-02-intro-urlsession#Prise-en-main":{"role":"pseudoSymbol","title":"Prise en main","abstract":[{"type":"text","text":"Jusqu’à présent, toute la donnée que nous traitons est soit directement contenue dans l’app soit ajoutée par l’utilisateur. Dans la réalité des faits, la vaste majorité de la donnée consommée par une application provient d’un serveur. Nous allons découvrir comment récuperer cette donnée et l’afficher dans une application basique."}],"identifier":"doc:\/\/com.williamtomas.test\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main","kind":"section","type":"section","url":"\/tutorials\/test\/04-02-intro-urlsession#Prise-en-main"}}}